import re

import waflib


def build(bld):
    gen_filter_def = bld.path.find_node("gen_filter_def.py")
    gen_output = bld.cmd_and_log(
        [bld.env["PYTHON3"][0], gen_filter_def.abspath(), "--list-outputs"],
        quiet=waflib.Context.BOTH,
    )
    gen_output_list = re.split(r"\s+", gen_output.strip(), flags=re.S)

    bld(
        rule="${PYTHON3} ${SRC[0].abspath()}",
        source=gen_filter_def,
        target=[bld.path.find_node(x) for x in gen_output_list],
        cwd=bld.path.abspath(),
    )
    bld(
        features="cxx",
        source=bld.path.ant_glob(
            ["*.cpp"] +
            (["vapoursynth/*.cpp"] if bld.env.ENABLE_VAPOURSYNTH else []),
            excl=[
                "dllmain.cpp",
                "icc_override.cpp",
                "stdafx.cpp",
                "debug_dump.cpp",
            ],
        ),
        target="f3kdb-objs",
    )
